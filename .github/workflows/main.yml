name: "Build & unit test"

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'
      
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: 'stable'
      
      - name: Install Dependencies
        run: flutter pub get
      
      # Ajout de la phase de test
      - name: Run Unit Tests
        run: flutter test test/main_test.dart

      - name: Build APK
        run: flutter build apk --debug
      
      - name: Build appBundle
        run: flutter build appbundle
      
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Android Releases
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/bundle/release/app-app-debug.aab

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
      
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      # Ex√©cution de Fastlane pour capturer des screenshots iOS et Android
      - name: Run Fastlane iOS Screenshots
        run: |
          cd ios
          fastlane screenshots
        env:
          LANG: en_US.UTF-8

      - name: Run Fastlane Android Screenshots
        run: |
          cd android
          fastlane screenshots
        env:
          LANG: en_US.UTF-8

      - name: Upload APK TestApp.io
        uses: testappio/github-action@v5
        with:
          api_token: ${{secrets.TESTAPPIO_API_TOKEN}}
          app_id: ${{secrets.TESTAPPIO_APP_ID}}
          file: build/app/outputs/flutter-apk/app-debug.apk
          release_notes: ""
          git_release_notes: true
          include_git_commit_id: false
          notify: true
